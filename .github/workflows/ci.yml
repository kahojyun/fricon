name: CI

on:
  push:
    branches:
      - main
    tags:
      - "**"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  fmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Ruff format
        run: uv run --only-group fmt ruff format --check
      - name: Ruff lint
        run: uv run --only-group fmt ruff check --output-format=github
      - name: Cargo fmt
        run: cargo fmt --all --check
      - name: Frontend check
        run: pnpm run check

  test-python:
    name: Test Python
    needs: [fmt]
    runs-on: ubuntu-24.04
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: taiki-e/install-action@v2
        with:
          tool: protoc
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Sync project
        run: uv sync --locked --group ci
      - name: Pytest
        run: uv run pytest
      - name: Basedpyright
        run: uv run basedpyright
      - name: Stubtest
        run: uv run stubtest fricon._core
      - name: Build docs
        run: uv run --group docs mkdocs build -s -v

  test-rust:
    name: Test Rust
    needs: [fmt]
    runs-on: ubuntu-24.04
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: taiki-e/install-action@v2
        with:
          tool: protoc
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"
      - name: Cargo build
        run: cargo build --workspace --verbose --locked
      - name: Cargo test
        run: cargo test --workspace --verbose
      - name: Cargo clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

  cargo-deny:
    name: Check cargo dependencies
    needs: [fmt]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny
      - name: Check cargo dependencies
        run: cargo deny --workspace --all-features check

  build:
    runs-on: ${{ matrix.runner }}
    needs: [fmt]
    strategy:
      matrix:
        include:
          # Linux x86_64
          - runner: ubuntu-24.04
            os: linux
            target: x86_64
            args: --release --out dist --zig
          # Linux aarch64 using native ARM runner
          - runner: ubuntu-24.04-arm
            os: linux
            target: aarch64
            args: --release --out dist --zig
          # Windows x86_64
          - runner: windows-2022
            os: windows
            target: x86_64
            args: --release --out dist
          # Windows aarch64
          - runner: windows-2022
            os: windows
            target: aarch64
            args: --release --out dist
          # macOS x86_64
          - runner: macos-14
            os: macos
            target: x86_64
            args: --release --out dist
          # macOS aarch64
          - runner: macos-14
            os: macos
            target: aarch64
            args: --release --out dist
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies (Linux)
        if: matrix.os == 'linux'
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - uses: taiki-e/install-action@v2
        with:
          tool: protoc,cargo-bundle-licenses
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "pnpm"
      - name: Bundle licenses
        run: cargo bundle-licenses --format toml --output ${{ github.workspace }}/LICENSES-THIRDPARTY.toml
        working-directory: crates/fricon-py
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: ${{ matrix.args }}
          sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.target }}
          path: dist

  sdist:
    runs-on: ubuntu-24.04
    needs: [fmt]
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-bundle-licenses
      - name: Bundle licenses
        run: cargo bundle-licenses --format toml --output ${{ github.workspace }}/LICENSES-THIRDPARTY.toml
        working-directory: crates/fricon-py
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  # For branch protection rules
  check:
    if: always()
    needs: [test-python, test-rust, cargo-deny, build, sdist]
    runs-on: ubuntu-24.04
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  publish:
    name: Publish to PyPI
    needs:
      - check
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-24.04
    environment:
      name: pypi
      url: https://pypi.org/p/fricon
    permissions:
      id-token: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
