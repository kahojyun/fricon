from datetime import datetime
from typing import Any, final

import pandas as pd
import polars as pl
import pyarrow as pa
from typing_extensions import Self

__all__ = ["Dataset", "DatasetManager", "Workspace", "complex128", "lib_main"]

def lib_main() -> int: ...
def complex128() -> pa.DataType: ...
@final
class Workspace:
    @staticmethod
    def open(path: str) -> Workspace: ...
    @property
    def dataset_manager(self) -> DatasetManager: ...

class DatasetManager:
    def create(
        self,
        name: str,
        description: str | None = ...,
        tags: list[str] | None = ...,
        schema: pa.Schema | None = ...,
    ) -> DatasetWriter: ...
    def open(
        self,
        uid: str,
    ) -> Dataset: ...
    def list_all(self) -> pd.DataFrame: ...

class DatasetWriter:
    def write(self, **kwargs: Any) -> None: ...
    def to_dataset(self) -> Dataset: ...
    def __enter__(self) -> Self: ...
    def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None: ...

class Dataset:
    name: str
    description: str
    tags: list[str]
    def to_pandas(self) -> pd.DataFrame: ...
    def to_polars(self) -> pl.DataFrame: ...
    @property
    def uid(self) -> str: ...
    @property
    def path(self) -> str: ...
    @property
    def created_at(self) -> datetime: ...
    @property
    def schema(self) -> pa.Schema: ...
